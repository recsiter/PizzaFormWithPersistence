<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-03T09:49:38Z" name="PizzaFormWithPersistence" finished-at="2023-04-03T09:49:38Z" duration-ms="88">
    <groups>
    </groups>
    <test started-at="2023-04-03T09:49:38Z" name="logic.PizzaHandlerTest" finished-at="2023-04-03T09:49:38Z" duration-ms="88">
      <class name="logic.PizzaHandlerTest">
        <test-method signature="testUpdatePizza()" started-at="2023-04-03T09:49:38Z" name="testUpdatePizza" finished-at="2023-04-03T09:49:38Z" duration-ms="35" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<logic.Pizza@57f23557> but was:<logic.Pizza@3d0f8e03>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<logic.Pizza@57f23557> but was:<logic.Pizza@3d0f8e03>
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.failNotEquals(Assert.java:835)
at org.junit.Assert.assertEquals(Assert.java:120)
at org.junit.Assert.assertEquals(Assert.java:146)
at logic.PizzaHandlerTest.testUpdatePizza(PizzaHandlerTest.java:72)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at org.testng.junit.JUnit4TestRunner.start(JUnit4TestRunner.java:82)
at org.testng.junit.JUnit4TestRunner.run(JUnit4TestRunner.java:70)
at org.testng.TestRunner$1.run(TestRunner.java:570)
at org.testng.TestRunner.runJUnitWorkers(TestRunner.java:717)
at org.testng.TestRunner.privateRunJUnit(TestRunner.java:601)
at org.testng.TestRunner.run(TestRunner.java:502)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePizza -->
        <test-method signature="testGetPizzaList()" started-at="2023-04-03T09:49:38Z" name="testGetPizzaList" finished-at="2023-04-03T09:49:38Z" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPizzaList -->
        <test-method signature="testSavePizza()" started-at="2023-04-03T09:49:38Z" name="testSavePizza" finished-at="2023-04-03T09:49:38Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSavePizza -->
      </class> <!-- logic.PizzaHandlerTest -->
    </test> <!-- logic.PizzaHandlerTest -->
  </suite> <!-- PizzaFormWithPersistence -->
</testng-results>
